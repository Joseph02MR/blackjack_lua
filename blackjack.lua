-- title:   blackjack
-- author:  joseph02, email, etc.
-- desc:    simple blackjack port in lua
-- site:    website link
-- license: MIT License (change this to your license of choice)
-- version: 0.1
-- script:  lua

function BOOT()
	drawn=false
--	x=80
--	y=80
	sw=8  --spr width
	cs=30 --card space
	css=18 --card short space

	xb=160 --coordinates for initial button
	yb=110
	
	pcards={} --play cards
	deck_ptr=1
	for i=1,4 do
		for j=1,13 do
			pcards[deck_ptr]={i,j}
			deck_ptr=deck_ptr+1
		end
	end
	dealer={}
	dheight=5 --dealer card height
	players={}
	init_players(1)
	pheight=60 --players card heigth
end

function init_players(num)
	local aux=1
	while(aux<=num)do
		players[aux]={}
		aux=aux+1
	end	
end

function shuffle(darr,dsize)
	for i=dsize,1,-1 do
		local j=math.random(1,i)
		local tmp=darr[i]
		darr[i]=darr[j]
		darr[j]=tmp
	end
end 

function create_deck(deck_num)
	local aux={}
	local k=0
	local ptr=1
	repeat
		for i=1,52 do
			aux[ptr]=i
			ptr=ptr+1
		end
		k=k+1
	until(deck_num==k)
	shuffle(aux,#aux)
	return aux
end

function sel_tile(x,y)
	if x==0 and y==0 then return 0;
		elseif x==0 and y==3 then return 1;
		elseif x==2 and y==0 then return 2;
		elseif x==2 and y==3 then return 3;
		else return 4;
	end
end

function draw_card(deck,card,x,y)
	for i=0,3,1	do
		for j=0,2,1 do
			spr(sel_tile(j,i),(sw*j)+x,(sw*i)+y,0,1,0,0,1,1)
		end
	end	

 local c=31+deck[card][1]
 local n=47+deck[card][2]
	spr(c,(sw+x),(sw+y) ,0,1,0,0,1,1);
	spr(n,(sw+x),(sw*2)+y+1,0,1,0,0,1,1);
end

function draw_back(x,y)
	local aux=0
	for i=0,3,1	do
		for j=0,2,1 do
			spr(16+aux,(sw*j)+x,(sw*i)+y,0,1,0,0,1,1)
			aux=aux+1
		end
	end	
end

function first_deal(deck)
	local card=1
	
	for cn=1,2 do
		for i=1,#players do
			players[i][cn]=deck[card]
			deck[card]=0
			card=card+1
		end
		dealer[cn]=deck[card]
		deck[card]=0
		card=card+1
	end
	
	return card
end

function draw_first_deal()
	for cn=1,2 do
		for i=1,#players do
			draw_card(pcards, players[i][cn],80+(i-1)*css,pheight)
		end
		draw_card(pcards, dealer[cn],80+(cn-1)*cs,dheight)
	end
end

function draw_buttons()
	for i=0, 3 do
		spr(5+i,xb-(i*34),yb,0,2,0,0,1,1)
		line(xb+2-(i*34),yb-2,xb+13-(i*34),yb-2,8)
		line(xb+2-(i*34),yb-1,xb+13-(i*34),yb-1,8)
	end
end

function draw_selected()
	local mx,my,ml=mouse()
	local x_in=false
	local y_in=false
	local b=-1
	for i=0, 3 do
		if(xb-(i*34) < mx and mx < xb-(i*34)+16) then x_in=true
			if(yb < my and my < yb+16) then
				y_in=true
				b=i 
			end
		end
	end
	if y_in and x_in then 
		spr(12,xb-(b*34)-2,yb-4,0,2,0,0,2,2)
		if ml then button_click(b) end
	end
	
end

function button_click(b)
	if b==0 then hit()
	elseif b==1 then double();
	elseif b==2 then split();
	elseif b==3 then stand();
	end
end

function hit()
	print("hit",0,130)
end

function double()
	print("double",0,130)
end

function split()
	print("split",0,130)
end

function stand()
	print("stand",0,130)
end

function TIC()
	dcnt=0
	cls(6)
	if not drawn then
	deck=create_deck(2)
	dcnt=first_deal(deck)
	drawn = true
	end


	draw_first_deal()
	draw_selected()
	draw_buttons()
	button_click()
	

	--[[
	draw_card(pcards,deck[1],x,y)
	line(x+17,y,x+17,y+31,13)
	draw_card(pcards,deck[2],x+18,y)
	
	draw_back(x,y-50)
	draw_back(x+cs,y-50)
	--]]
	
--[[ debug-check shuffle	
	aux=0
	z=0
	for i=1,#deck do
		print(deck[i],z,aux)
		aux=aux+6
		if aux>120 then z=z+20;aux=0 end
	end
	--]]
	local aux2=0
	for i=1,#players[1] do
		print(pcards[players[1][i]][1].. " ".. pcards[players[1][i]][2],0,aux2)
		aux2=aux2+6
	end
	for i=1,#dealer do
		print(pcards[dealer[i]][1].." "..pcards[dealer[i]][2],0,aux2)
		aux2=aux2+6
	end
end

--14390
--15052






-- <TILES>
-- 000:0ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
-- 001:cccccccccccccccccccccccccccccccccccccccccccccccccccccccc0ccccccc
-- 002:ccccccc0cccccccccccccccccccccccccccccccccccccccccccccccccccccccc
-- 003:ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc0
-- 004:cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
-- 005:8666666886866868868668688688886886866868868668688666666808888880
-- 006:8aaaaaa88a888aa88a8aa8a88a8aa8a88a8aa8a88a888aa88aaaaaa808888880
-- 007:8488444884844448844844488488884884448848844484488444444808888880
-- 008:8222222882888828828222288288882882222828828888288222222808888880
-- 012:00cccccc0c000000c0000000c0000000c0000000c0000000c0000000c0000000
-- 013:00000000c00000000c0000000c0000000c0000000c0000000c0000000c000000
-- 016:0ccccccccc444444c4322222c4234444c4243222c4242344c4242432c4242423
-- 017:cccccccc44444444222222224444444422222222444444442222222244444444
-- 018:ccccccc0444444cc2222234c4444324c2223424c4432424c2342424c3242424c
-- 019:c4242424c4242424c4242424c4242424c4242424c4242424c4242424c4242424
-- 020:3434434343422434342222434322223432222223422222242222222222222222
-- 021:4242424c4242424c4242424c4242424c4242424c4242424c4242424c4242424c
-- 022:c4242424c4242424c4242424c4242424c4242424c4242424c4242424c4242424
-- 023:2222222222222222422222243222222343222234342222434342243434344343
-- 024:4242424c4242424c4242424c4242424c4242424c4242424c4242424c4242424c
-- 025:c4242423c4242432c4242344c4243222c4234444c4322222cc4444440ccccccc
-- 026:44444444222222224444444422222222444444442222222244444444cccccccc
-- 027:3242424c2342424c4432424c2223424c4444324c2222234c444444ccccccccc0
-- 028:c00000000c00000000cccccc0000000000000000000000000000000000000000
-- 029:0c000000c0000000000000000000000000000000000000000000000000000000
-- 032:000ff00000ffff000ffffff0ffffffffffffffffffffffffff0ff0ff00ffff00
-- 033:000ff00000ffff0000ffff000f0ff0f0ffffffffffffffff0f0ff0f000ffff00
-- 034:0220022022222222222222222222222222222222022222200022220000022000
-- 035:0002200000222200022222202222222222222222022222200022220000022000
-- 036:0f000000fff00000f0f000000000000000000000000000000000000000000000
-- 037:0f000000fff000000f0000000000000000000000000000000000000000000000
-- 038:2020000022200000020000000000000000000000000000000000000000000000
-- 039:0200000022200000020000000000000000000000000000000000000000000000
-- 048:0088880008888880088008800880088008888880088008800880088008800880
-- 049:0088880008800880088008800000888000888800088800000880088008888880
-- 050:0088880008000880080008800008880000000880080008800800088000888800
-- 051:0080880008808800080088008800880088888880000088000000880000008800
-- 052:0888888008800000088000000888888000000088088000880880008800888880
-- 053:0088888008800008088000000888888008800088088000880880008800888880
-- 054:0888888808000888080008800000880000008800000880000008800000088000
-- 055:0088888008800088088000880088888008800088088000880888888800888880
-- 056:0088888008800088088000880880008800888888000000880000008800888880
-- 057:0800888088088008080880880808808808088808080888080808800888808880
-- 058:0088888800000880000008800000088000000880000008800880088000888800
-- 059:0088880008800080088000800880008008800080088088800880088800888808
-- 060:0880088008800880088088000888800008808800088088000880088008800880
-- 064:8880000080800000888000008080000080800000000000000000000000000000
-- 065:8880000000800000888000008000000088800000000000000000000000000000
-- 066:8880000000800000088000000080000088800000000000000000000000000000
-- 067:8080000080800000888000000080000000800000000000000000000000000000
-- 068:8880000080000000888000000080000088800000000000000000000000000000
-- 069:8880000080000000888000008080000088800000000000000000000000000000
-- 070:8880000000800000008000000080000000800000000000000000000000000000
-- 071:8880000080800000888000008080000088800000000000000000000000000000
-- 072:8880000080800000888000000080000088800000000000000000000000000000
-- 073:8088800080808000808080008080800080888000000000000000000000000000
-- 074:8880000008000000080000000800000088000000000000000000000000000000
-- 075:8880000080800000808000008800000000800000000000000000000000000000
-- 076:8080000080800000880000008080000080800000000000000000000000000000
-- 089:8000000080000000800000008000000080000000000000000000000000000000
-- 114:0ccccccccc444444c4322222c4234444c4243222c4242344c4242432c4242423
-- 115:cccccccc44444444222222224444444422222222444444442222222244444444
-- 116:ccccccc0444444cc2222234c4444324c2223424c4432424c2342424c3242424c
-- 118:0ccccccccccfccccccfffccccccfcccccccccccccc888ccccc8ccccccc888ccc
-- 119:cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
-- 120:ccccccc0cccccccccccccccccccccccccccccccccccccccccccccccccccccccc
-- 130:c4242424c4242424c4242424c4242424c4242424c4242424c4242424c4242424
-- 131:3434434343422434342222434322223432222223422222242222222222222222
-- 132:4242424c4242424c4242424c4242424c4242424c4242424c4242424c4242424c
-- 134:cccc8ccccc888ccccccccccccccccccccccccccccccccccccccccccccccccccc
-- 135:00ffff0000ffff0000ffff00ff0ff0ffffffffffffffffffff0ff0ff000ff000
-- 136:cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
-- 146:c4242424c4242424c4242424c4242424c4242424c4242424c4242424c4242424
-- 147:2222222222222222422222243222222343222234342222434342243434344343
-- 148:4242424c4242424c4242424c4242424c4242424c4242424c4242424c4242424c
-- 150:cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
-- 151:0888888008800000088000000888888000000088088000880880008800888880
-- 152:cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
-- 162:c4242423c4242432c4242344c4243222c4234444c4322222cc4444440ccccccc
-- 163:44444444222222224444444422222222444444442222222244444444cccccccc
-- 164:3242424c2342424c4432424c2223424c4444324c2222234c444444ccccccccc0
-- 166:cccccccccccccccccccccccccccccccccccccccccccccccccccccccc0ccccccc
-- 167:cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
-- 168:cccccccccccccccccccffccccffffffccfcffcfcccffffcccccffcccccccccc0
-- </TILES>

-- <WAVES>
-- 000:00000000ffffffff00000000ffffffff
-- 001:0123456789abcdeffedcba9876543210
-- 002:0123456789abcdef0123456789abcdef
-- </WAVES>

-- <SFX>
-- 000:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000304000000000
-- </SFX>

-- <TRACKS>
-- 000:100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- </TRACKS>

-- <PALETTE>
-- 000:1a1c2c650418b13e53ef7d57ffcd75a7f07038b7642571790000003b5dc941a6f673eff7f4f4f494b0c2566c86333c57
-- </PALETTE>

